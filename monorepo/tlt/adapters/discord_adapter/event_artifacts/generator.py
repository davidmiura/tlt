import discord
from typing import TYPE_CHECKING
import logging

if TYPE_CHECKING:
    from tlt.adapters.discord_adapter.bot_manager import DiscordBot

logger = logging.getLogger(__name__)

class EventArtifactGenerator:
    def __init__(self, bot_instance: 'DiscordBot'):
        self.bot_instance = bot_instance
    
    async def generate_event_artifact(self, message_id: int):
        """Generate post-event artifact"""
        if message_id not in self.bot_instance.active_events:
            return
            
        event = self.bot_instance.active_events[message_id]
        guild = self.bot_instance.get_guild(event["guild_id"])
        if not guild:
            return
            
        # Get all experiences for this event
        event_experiences = [
            exp for exp in self.bot_instance.experiences.values()
            if exp.get("message_id") == message_id
        ]
        
        # Create artifact embed
        embed = discord.Embed(
            title=f"📸 Event Summary: {event['topic']}",
            description=f"**📍 Location:** {event['location']}\n**🕐 Time:** {event['time']}",
            color=discord.Color.green()
        )
        
        # Add attendance summary
        reactions = event.get("reactions", {})
        attended_count = len(reactions.get("✅", []))
        maybe_count = len(reactions.get("❓", []))
        declined_count = len(reactions.get("❌", []))
        
        embed.add_field(
            name="📊 Attendance",
            value=f"✅ Attended: {attended_count}\n❓ Maybe: {maybe_count}\n❌ Declined: {declined_count}",
            inline=True
        )
        
        # Add experience summary
        if event_experiences:
            total_rating = sum(exp["rating"] for exp in event_experiences)
            avg_rating = total_rating / len(event_experiences)
            embed.add_field(
                name="⭐ Experience Rating",
                value=f"{avg_rating:.1f}/5.0 ({len(event_experiences)} reviews)",
                inline=True
            )
            
            # Add some feedback highlights
            feedback_highlights = [exp["feedback"][:100] + "..." if len(exp["feedback"]) > 100 
                                 else exp["feedback"] for exp in event_experiences[:3]]
            if feedback_highlights:
                embed.add_field(
                    name="💬 Feedback Highlights",
                    value="\n".join([f"• {fb}" for fb in feedback_highlights]),
                    inline=False
                )
        
        embed.set_footer(text=f"Event completed • Generated by TLT Bot")
        
        # Send to original channel
        channel = guild.get_channel(event["channel_id"])
        if channel:
            await channel.send(embed=embed)
            logger.info(f"Generated artifact for event: {event['topic']}")